[workspace]
resolver = "3"
members = ["packages/lib-backend", "apps/ad_platform"]

[workspace.package]
authors = ["Kirill Udaltsov <me@udaltsovk.ru>"]
edition = "2024"

[workspace.dependencies]
lib = { path = "./packages/lib-backend" }

async-trait = "0.1"
axum = "0.8"
bon = "3.7"
derive-where = "1.6"
chrono = "0.4"
env-vars-config = "0.5"
metrics = "0.24"
rstest = "0.26"
serde = "1.0"
sqlx = "0.8"
tap = "1.0"
tikv-jemallocator = "0.6"
thiserror = "2.0"
tokio = "1.47"
tower = "0.5"
tower-http = "0.6"
tracing = "0.1"
uuid = "1.18"

# TODO: use utoipa from crates.io when https://github.com/juhaku/utoipa/pull/1329 merged
utoipa = { git = "https://github.com/NikSneMC/utoipa" }
utoipa-axum = { git = "https://github.com/NikSneMC/utoipa" }
utoipa-scalar = { git = "https://github.com/NikSneMC/utoipa" }


[profile.release]
lto = "fat"
strip = true
opt-level = 3
panic = "abort"
codegen-units = 1

[workspace.lints.rust]
# Arithmetic
arithmetic_overflow = "deny" # Prevent operations that would cause integer overflow

# Unsafe code detection
unnecessary_transmutes = "deny" # Prevent unsafe transmutation from integers to characters or floats

[workspace.lints.clippy]
# Arithmetic
checked_conversions = "deny"            # Suggest using checked conversions between numeric types
cast_possible_truncation = "deny"       # Detect when casting might truncate a value
cast_sign_loss = "deny"                 # Detect when casting might lose sign information
cast_possible_wrap = "deny"             # Detect when casting might cause value to wrap around
cast_precision_loss = "deny"            # Detect when casting might lose precision
integer_division = "deny"               # Highlight potential bugs from integer division truncation
arithmetic_side_effects = "deny"        # Detect arithmetic operations with potential side effects
unchecked_duration_subtraction = "deny" # Ensure duration subtraction won't cause underflow

# Unwraps
unwrap_used = "deny"       # Discourage using .unwrap() which can cause panics
panicking_unwrap = "deny"  # Prevent unwrap on values known to cause panics
option_env_unwrap = "deny" # Prevent unwrapping environment variables which might be absent

# Array indexing
indexing_slicing = "deny" # Avoid direct array indexing and use safer methods like .get()

# Path handling
join_absolute_paths = "deny" # Prevent issues when joining paths with absolute paths

# Serialization issues
serde_api_misuse = "deny" # Prevent incorrect usage of Serde's serialization/deserialization API

# Unbounded input
uninit_vec = "deny" # Prevent creating uninitialized vectors which is unsafe

# Unsafe code detection
transmute_ptr_to_ref = "deny"     # Prevent unsafe transmutation from pointers to references
transmute_undefined_repr = "deny" # Detect transmutes with potentially undefined representations
